{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/Searchbox.js","components/Scroll.js","containers/App.js","index.js"],"names":["Card","props","name","email","id","url","className","src","alt","Cardlist","cards","people","map","user","key","Searchbox","searchField","inputChange","type","placeholder","onChange","Scroll","style","overflowY","border","height","children","App","onInputChange","event","setState","target","value","state","fetch","then","res","json","users","filteredPeople","this","filter","item","toLowerCase","includes","toLocaleLowerCase","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wNAqBeA,EAnBF,SAACC,GAAW,IACjBC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,MAAOC,EAAOH,EAAPG,GAKfC,EAAG,+CAA2CD,GAIlD,OACE,yBAAKE,UAAU,sDACb,yBAAKC,IAAKF,EAAKG,IAAI,iBACnB,wBAAIF,UAAU,SAASJ,GACvB,uBAAGI,UAAU,SAASH,KCJbM,EATE,SAAC,GAAgB,IAC1BC,EADyB,EAAbC,OACGC,KAAI,SAACC,GACxB,OACE,kBAAC,EAAD,CAAMC,IAAKD,EAAKT,GAAIA,GAAIS,EAAKT,GAAIF,KAAMW,EAAKX,KAAMC,MAAOU,EAAKV,WAGlE,OAAO,6BAAMO,ICMAK,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,YAChC,OACE,yBAAKX,UAAU,OACb,2BACEA,UAAU,mCACVY,KAAK,SACLC,YAAY,mBACZC,SAAUH,MCOHI,G,MAdA,SAACpB,GACd,OACE,yBACEqB,MAAO,CACLC,UAAW,SACXC,OAAQ,GACRC,OAAQ,UAGTxB,EAAMyB,YCwCEC,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAOFC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEd,YAAaa,EAAME,OAAOC,SAP1C,EAAKC,MAAQ,CACXtB,OAAQ,GACRK,YAAa,IAJH,E,gEAYO,IAAD,OAClBkB,MAAM,8CACHC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAW,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAGnC,IAAD,OACDC,EAAiBC,KAAKP,MAAMtB,OAAO8B,QAAO,SAACC,GAC/C,OAAOA,EAAKxC,KACTyC,cACAC,SAAS,EAAKX,MAAMjB,YAAY6B,wBAGrC,OAAiC,IAA7BL,KAAKP,MAAMtB,OAAOmC,OACb,0CAGL,yBAAKxC,UAAU,MACb,wBAAIA,UAAU,wCAAd,eACA,kBAAC,EAAD,CACEU,YAAawB,KAAKP,MAAMjB,YACxBC,YAAauB,KAAKZ,gBAEpB,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAUjB,OAAQ4B,U,GArCZQ,a,MCClBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.31e715fe.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Card = (props) => {\r\n  let { name, email, id } = props;\r\n\r\n  //   let url = `https://robohash.org/${id}.png?size=200x200`;\r\n  //   let url = `https://api.adorable.io/avatars/200/${props.email}.png`;\r\n\r\n  let url = `https://picsum.photos/200/200?random=${id}`;\r\n  //   let url = `https://loremflickr.com/200/200/sunset,city/all?random=${id}`;\r\n  //   let url = `https://source.unsplash.com/200x200/?nature,beach`;\r\n\r\n  return (\r\n    <div className=\"tc bg-dark-green dib br3 pa3 ma2 bw2 shadow-5 grow\">\r\n      <img src={url} alt=\"person-image\" />\r\n      <h3 className=\"white\">{name}</h3>\r\n      <p className=\"white\">{email}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nconst Cardlist = ({ people }) => {\r\n  const cards = people.map((user) => {\r\n    return (\r\n      <Card key={user.id} id={user.id} name={user.name} email={user.email} />\r\n    );\r\n  });\r\n  return <div>{cards}</div>;\r\n};\r\n\r\nexport default Cardlist;\r\n","import React from \"react\";\r\n\r\nconst Searchbox = ({ searchField, inputChange }) => {\r\n  return (\r\n    <div className=\"pa3\">\r\n      <input\r\n        className=\"pa2 ba b--green bg-lightest-blue\"\r\n        type=\"search\"\r\n        placeholder=\"Search people...\"\r\n        onChange={inputChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbox;\r\n","import React from \"react\";\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        overflowY: \"scroll\",\r\n        border: \"\",\r\n        height: \"700px\",\r\n      }}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Scroll;\r\n","import React, { Component } from \"react\";\r\nimport Cardlist from \"../components/Cardlist\";\r\nimport Searchbox from \"../components/Searchbox\";\r\nimport \"./App.css\";\r\nimport Scroll from \"../components/Scroll\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      people: [],\r\n      searchField: \"\",\r\n    };\r\n  }\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ searchField: event.target.value });\r\n  };\r\n\r\n  componentDidMount() {\r\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n      .then((res) => res.json())\r\n      .then((users) => this.setState({ people: users }));\r\n  }\r\n\r\n  render() {\r\n    const filteredPeople = this.state.people.filter((item) => {\r\n      return item.name\r\n        .toLowerCase()\r\n        .includes(this.state.searchField.toLocaleLowerCase());\r\n    });\r\n\r\n    if (this.state.people.length === 0) {\r\n      return <h1>Loading...</h1>;\r\n    } else {\r\n      return (\r\n        <div className=\"tc\">\r\n          <h1 className=\"f-subheadline lh-solid white ma2 pa3\">People List</h1>\r\n          <Searchbox\r\n            searchField={this.state.searchField}\r\n            inputChange={this.onInputChange}\r\n          />\r\n          <Scroll>\r\n            <Cardlist people={filteredPeople} />\r\n          </Scroll>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\n\nimport tachyons from \"tachyons\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}